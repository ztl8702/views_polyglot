<?php

use Drupal\views\ViewExecutable;

function views_polyglot_views_post_execute(ViewExecutable $view) {
  if (isset($view->polyglot) && $view->polyglot == TRUE) {
    //Call each polyglot filter
    foreach ($view->filter as $id=>$handler) {
      if (is_callable(array($handler, 'polyglotPostExecute'))) {
        $handler->polyglotPostExecute();				
      }
    }
	
    //Call each polyglot field
    foreach ($view->field as $id=>$handler) {
      if (is_callable(array($handler, 'polyglotPostExecute'))) {
        $handler->polyglotPostExecute();				
      }
    }

  }
}

function views_polyglot_views_pre_execute(ViewExecutable $view) {
  /* We need to set the limit and offset to 0, so that our code
   * can perform filtering on all rows.
   * This part is adapted from Views PHP module.
   */
   
  if (isset($view->polyglot) && $view->polyglot == TRUE) {
    $view->query->setLimit(0);
    $view->query->setOffset(0);	
  }
}


function views_polyglot_views_pre_render(ViewExecutable $view) {
  /* We need to rebuild the pager and offset value after we unset some result rows.
   * This part is adapted from Views PHP module. 
   */
  if (isset($view->polyglot) && $view->polyglot == TRUE) {
    
    $view->pager->total_items = count($view->result);
    $view->pager->updatePageInfo();	
    
    $item_per_page = $view->pager->getItemsPerPage();
    if ($item_per_page > 0) {
      $offset = $view->pager->getCurrentPage() * $item_per_page + $view->pager->getOffset();
      $view->result = array_slice($view->result, $offset, $item_per_page, true);
    }
  }
}
